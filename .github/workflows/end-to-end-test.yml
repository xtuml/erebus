name: End-to-End Test

on:
  pull_request:
    types:
      - opened
      - synchronize
    branches:
      'main'

jobs:
  build-and-test:
    if: |
        github.repository == 'xtuml/erebus'
            && github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}


      - name: Do test
        run: |
          mkdir -p config
          cp ./test_harness/config/default_config.config ./config/config.config
          sed -i 's/host\.docker\.internal/httpserver/g' ./config/config.config

          # mkdir -p aerconfig
          # cp ./end_to_end_test_configs/aer_config.json ./aerconfig/config.json
          # cp ./end_to_end_test_configs/log-config-reception.xml ./aerconfig/

          # mkdir -p aeo_svdc_config
          # cp ./end_to_end_test_configs/aeosvdc_config.json ./aeo_svdc_config/config.json
          # cp ./end_to_end_test_configs/log-config-verifier.xml ./aeo_svdc_config/

          docker compose -f ./docker-compose-end-to-end-test.yml up -d

          # this should return false as no tests are running
          sleep 10
          echo "Testing that no tests are running"
          curl 127.0.0.1:8800/isTestRunning | grep 'false'

          # actual tests are set to run
          timeout 1m ./scripts/end-to-end-curl-commands.sh

          # this should return true as tests are running
          echo "Testing that tests are running"
          curl 127.0.0.1:8800/isTestRunning | grep 'true'

          # It takes this long to get any meaningful output from the test harness
          # It's 60 seconds for the test harness to start the job ...
          # ... and 10 seconds to run the job ...
          # ... and 60 seconds to ensure the test is finished ...
          # ... and another 50 seconds for grace time in starting up/waiting for logs/waiting for calculations
          echo "Sleeping to give the test harness time to work"
          date
          sleep 20
          echo "Testing that a percentage is returned"
          curl 127.0.0.1:8800/isTestRunning | grep percent_done
          sleep 160
          date
          sleep 10

          docker compose -f ./docker-compose-end-to-end-test.yml logs test-harness | grep -Po "Test Harness test run completed successfully"
          docker compose -f ./docker-compose-end-to-end-test.yml down


      # - name: Save the whole repo to know exactly what happened in there
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: whole-repo
      #     path: |
      #       **/*
      #       !/home/runner/work/test-harness/test-harness/$SSH_AUTH_SOCK